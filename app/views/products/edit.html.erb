<% content_for :css do %>
  <%= stylesheet_link_tag "form" %>
  <%= stylesheet_link_tag "entity_form" %>
<% end %>
<% content_for :js do %>
  <%= javascript_include_tag "entity_form", type: "module", crossorigin: true %>
<% end %>

<div class="Form Form--centered">
  <div class="Heading">
    <h1>
      <%= t('edit') %>
      <% if @brand %>
        <span><%= @product.name %></span>
      <% end %>
    </h1>
  </div>

  <details class="Instructions">
    <summary>Please read before editing a product</summary>
    <div class="Instructions-content Rte">
      <p>Thank you for contributing to HiFi&thinsp;Log!</p>
      <p>Please read the following instructions to make sure all products are added properly:</p>
      <ul>
        <li>Please only add the product name, not the brand name, in the field "Name". The brand name will be added automatically.</li>
        <li>Not all information has to be filled out right away. Fields marked with "optional" can be filled out later.</li>
        <li>You can assign multiple categories to a product, for example "Over-Ear Headphones" + "Noise Cancelling Headphones".</li>
        <li>If you for example only know the year (or year and month) when a product has been released, you can omit the other fields.</li>
        <li>When adding a product to a brand that has been discontinued, the product will automatically be set to discontinued as well, no matter what you select.</li>
        <li>The description can contain any relevant information that is not discovered by the other fields.</li>
        <li>
          The description field supports Markdown for basic styling:<br>
          <code><b><%= "**bold text**" %></b></code><br>
          <code><em><%= "*italic text*" %></em></code><br>
          <code><%= "- unordered lists" %></code><br>
          <code><%= "1. ordered lists" %></code>
        </li>
        <li>The price should ideally be the retail price recommended by the manufacturer provided in USD (or alternatively in EUR) to allow better comparisons. If you cannot provide that, you can also add the price in a different currency.</li>
        <li>You can leave a comment to describe why your change was necessary, in case you found incorrect information or something similar.</li>
      </ul>
      </ul>
    </div>
  </details>

  <% if @product.errors.any? %>
    <%= render "shared/flash_messages", messages: @product.errors.map { |error| ["alert", error.full_message] } %>
  <% end %>

  <%= form_for @product, url: product_path(id: @product.id), html: { class: "EntityForm", method: :put } do |f| %>
    <div class="Form-field">
      <%= f.label :name, class: "Form-label" %>
      <%= f.text_field :name, required: true %>
    </div>

    <div class="Form-field">
      <div class="Form-label"><%= t('headings.categories') %></div>
      <div class="Options EntityForm-subCategories">
        <% @categories.each do |category| %>
          <details <% if (category.sub_category_ids & @product.sub_category_ids).any? %>open<% end %>>
          <summary><%= category.name %></summary>
            <% category.sub_categories.each do |sub_category| %>
              <div class="Options-item">
                <%= check_box_tag "product[sub_category_ids][#{sub_category.id}]", sub_category.id, @product.sub_category_ids.include?(sub_category.id), name: "product[sub_category_ids][]" %>
                <%= label_tag "product[sub_category_ids][#{sub_category.id}]", sub_category.name %>
              </div>
            <% end %>
          </details>
        <% end %>
      </div>
    </div>

    <div class="Form-field EntityForm-attributes">
      <span class="Form-label"><%= t('activerecord.attributes.sub_category.custom_attribute_ids') %></span>
      <div class="Options">
        <% CustomAttribute.all.each do |custom_attribute| %>
          <div class="EntityForm-attribute" data-sub-category-ids="<%= custom_attribute.sub_category_ids %>" hidden>
            <% custom_attribute.options.each do |option| %>
              <div class="Form-options">
                <input type="radio" name="<%= "product[custom_attributes][#{custom_attribute.id}]" %>" value="<%= option[0] %>" id="<%= "product[custom_attributes][#{custom_attribute.id}]-#{option[0]}" %>"<%= " checked" if @product.custom_attributes.present? && @product.custom_attributes["#{custom_attribute.id}"] == option[0] %><%#= " disabled" if !@product.sub_category_ids.include?(sub_category.id) %>>
                <label for="<%= "product[custom_attributes][#{custom_attribute.id}]-#{option[0]}" %>"><%= t("custom_attributes.#{option[1]}") %></label>
              </div>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>

    <div class="Form-field">
      <%= f.label :description, class: "Form-label" do %>
        <%= t('brand.description') %> <small><i>(optional)</i></small>
      <% end %>
      <%= f.text_area :description %>
    </div>

    <div class="Form-field">
      <div class="u-flex u-gap-md">
        <div>
          <%= f.label :price, class: "Form-label" do %>
            <%= t('activerecord.attributes.product.price') %> <small><i>(optional)</i></small>
          <% end %>
          <%= f.text_field :price, inputmode: "number" %>
        </div>
        <div>
          <%= f.label :price_currency, class: "Form-label" do %>
            <%= t('activerecord.attributes.product.price_currency') %> <small><i>(optional)</i></small>
          <% end %>
          <%= f.select :price_currency do %>
            <option value=""></option>
            <% ['USD', 'EUR'].each do |id| %>
              <option value="<%= id %>"<%= " selected" if @product.price_currency == id %>><%= CURRENCIES.find { |currency| currency[:id] == id }[:name] %></option>
            <% end %>
            <hr>
            <% CURRENCIES.select { |currency| !['USD', 'EUR'].include?(currency[:id]) }.sort_by { |currency| currency[:id] }.each do |currency| %>
              <option value="<%= currency[:id] %>"<%= " selected" if @product.price_currency == currency[:id] %>><%= currency[:name] %></option>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>

    <div class="Form-field">
      <%= f.label :release_date, class: "Form-label" do %>
        <%= t('product.release_date') %> <small><i>(optional)</i></small>
      <% end %>
      <div class="EntityForm-date">
        <%= f.select :release_day, (1..31).map { |d| [d, d] }, { include_blank: "Day" }, { "aria-label": "Day" } %>
        <%= select_month(@product.release_month, { field_name: "release_month", prefix: "product", prompt: "Month" }, { "aria-label": "Month" }) %>
        <%= f.text_field :release_year, inputmode: "number", list: "years", placeholder: "Year", "aria-label": "Year" %>
      </div>
      <small>If you for example only know the year, you can also omit day and month.</small>
      <datalist id="years">
        <% (1900..Date.today.year+1).to_a.reverse.each do |year| %>
          <option value="<%= year %>"></option>
        <% end %>
      </datalist>
    </div>

    <% if @brand && @brand.discontinued %>
      <p class="EntityForm-note">
        <small>
          Since <i><%= link_to @brand.name, brand_path(id: @brand.friendly_id) %></i> has been discontinued, this product is automatically set to discontinued as well.
        </small>
      </p>
    <% else %>
      <div class="Form-field Form-field--inline Entity-discontinued">
        <span class="Form-label"><%= t('symbols.discontinued') %></span>
        <div class="Form-options">
          <%= f.radio_button :discontinued, 0, checked: (@product.discontinued.nil? || @product.discontinued == false) %>
          <%= f.label :discontinued, "No", value: 0 %>
          <%= f.radio_button :discontinued, 1, checked: (@product.discontinued == true) %>
          <%= f.label :discontinued, "Yes", value: 1  %>
        </div>
      </div>
    <% end %>

    <div class="Form-field Entity-discontinuedDate"<%= "hidden" unless @product.discontinued? %>>
      <%= f.label :discontinued_date, class: "Form-label" do %>
        <%= t('product.discontinued_date') %> <small><i>(optional)</i></small>
      <% end %>
      <div class="EntityForm-date">
        <%= f.select :discontinued_day, (1..31).map { |d| [d, d] }, { include_blank: "Day" }, { "aria-label": "Day", disabled: @product.discontinued.nil? || @product.discontinued == false } %>
        <%= select_month(@product.discontinued_month, { field_name: "discontinued_month", prefix: "product", prompt: "Month" }, { "aria-label": "Month", disabled: (@product.discontinued.nil? || @product.discontinued == false) }) %>
        <%= f.text_field :discontinued_year, inputmode: "number", list: "years", placeholder: "Year", disabled: (@product.discontinued.nil? || @product.discontinued == false), "aria-label": "Year" %>
      </div>
      <small>If you for example only know the year, you can also omit day and month.</small>
      <datalist id="years">
        <% (1900..Date.today.year+1).to_a.reverse.each do |year| %>
          <option value="<%= year %>"></option>
        <% end %>
      </datalist>
    </div>

    <div class="Form-field Form-field--divider">
      <%= f.label :comment, class: "Form-label" do %>
        <%= t('activerecord.attributes.version.comment') %> <small><i>(optional)</i></small>
      <% end %>
      <%= f.text_area :comment %>
    </div>

    <div class="Form-submit">
      <%= f.button t('new_product.submit'), type: "submit", class: "Button" %>
    </div>
  <% end %>
</div>
