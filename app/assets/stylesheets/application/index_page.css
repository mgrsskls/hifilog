.IndexPage {
	display: grid;
}

.IndexPage-header {
	grid-area: header;
}

.IndexPage-headerFilter {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: space-between;
	gap: 1rem 2rem;
}

.IndexPage-headerFilter :is(h1, h2) {
	margin-block: 0;

	small:not(:last-child) {
		margin-block-end: 0.5rem;
	}
}

.IndexPage-filter,
.IndexPage-addLink--l {
	margin-block-start: 2rem;
}

.IndexPage-addLink--l {
	border-block-start: var(--border-light);
	padding-block-start: 2rem;
}

@media (width < 48rem) {
	.IndexPage-addLink--l {
		display: none;
	}
}

@media (width >= 48rem) {
	.IndexPage-addLink--s {
		display: none;
	}
}

.IndexPage-content {
	grid-area: content;
	padding-block: 2rem;
}

.IndexPage-contentHeader {
	margin-block-end: 1rem;
	display: flex;
	justify-content: space-between;
	align-items: center;
	gap: 1rem 2rem;
}

@container listing (width < 24rem) {
	.IndexPage-contentHeader {
		flex-direction: column;
	}
}

.IndexPage-content .EmptyState {
	margin-block-start: 0;
}

@media (width < 48rem) {
	.IndexPage {
		grid-template:
			"header"
			"content";
		gap: 2rem;
		padding-block: 3rem;
	}
}

@media (width >= 48rem) {
	.IndexPage {
		grid-template: "header content" / var(--sidebar-size) 1fr;
		align-items: start;
	}

	.IndexPage-header {
		--top: var(--header-height);

		position: sticky;
		inset-block-start: var(--top);
		overflow-y: auto;
		padding-block: 2rem;
		padding-inline-end: var(--page-spacing);
		box-sizing: border-box;
		border-inline-end: var(--border-light);
		display: flex;
		flex-direction: column;
	}

	.IndexPage--fullPage .IndexPage-header {
		block-size: calc(100dvb - var(--top));
	}

	.IndexPage-content {
		border-inline-start: var(--border-light);
		padding-inline-start: var(--page-spacing);
		margin-inline-start: calc(-1 * 0.0625rem);
	}
}
