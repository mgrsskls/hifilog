.IndexPage {
	display: grid;
}

.IndexPage-title {
	font-size: 1.8rem;
	font-weight: normal;

	span {
		font-weight: 800;
	}
}

.IndexPage-header {
	grid-area: header;
}

.IndexPage-headerFilter :is(h1, h2) {
	margin-block: 0;
}

.IndexPage-filter {
	margin-block-start: 2rem;
}

.IndexPage-actions {
	background: var(--color-bg2);
	padding-block: 0.75rem;
	padding-inline: var(--page-spacing);
	margin-inline: calc(-1 * var(--page-spacing));
	margin-block-end: 2rem;
	display: flex;
	gap: 1rem;
	justify-content: space-between;

	b {
		color: var(--color-secondary);
	}

	a {
		text-decoration: none;

		span {
			text-decoration: underline;
			text-underline-offset: var(--underline-offset);
			text-decoration-thickness: var(--underline-width);
		}
	}
}

.IndexPage-content {
	grid-area: content;
	padding-block: 2rem;
}

.IndexPage-contentHeader {
	margin-block-end: 2rem;
	display: flex;
	justify-content: space-between;
	align-items: center;
	gap: 1rem 2rem;
}

@container listing (width < 24rem) {
	.IndexPage-contentHeader {
		flex-direction: column;
	}
}

.IndexPage-content .EmptyState {
	margin-block-start: 0;
}

@media (width < 48rem) {
	.IndexPage {
		grid-template:
			"header"
			"content";
		gap: 2rem;
		padding-block: 2rem;

		&:has(.IndexPage-actions) {
			padding-block-start: 0;
		}
	}
}

@media (width >= 48rem) {
	.IndexPage {
		grid-template: "header content" / var(--sidebar-size) 1fr;
		align-items: start;
	}

	.IndexPage-header {
		--top: var(--header-height);

		position: sticky;
		inset-block-start: var(--top);
		overflow-y: auto;
		padding-inline: var(--page-spacing);
		margin-inline-start: calc(-1 * var(--page-spacing));
		box-sizing: border-box;
		border-inline-end: var(--border-light);
		display: flex;
		flex-direction: column;
		block-size: calc(100dvb - var(--top));

		&:not(:has(.IndexPage-actions)) {
			padding-block-start: 2rem;
		}
	}

	.IndexPage-content {
		border-inline-start: var(--border-light);
		padding-inline-start: var(--page-spacing);
		margin-inline-start: calc(-1 * 0.0625rem);
	}
}
