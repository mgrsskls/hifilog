table-saw {
	container: table / inline-size;
	display: block;
}

:is(nav, .Pagination, .FilterInfo) + :is(table, table-saw) {
	margin-block-start: 2rem;
}

table {
	border-collapse: collapse;
	inline-size: 100%;
	table-layout: fixed;
}

tr {
	padding-block: 1rem;
}

tr.is-positive,
tr[aria-current="true"] {
	font-weight: bold;
}

.has-item th:first-of-type {
	border-inline-start: 3px solid hsl(160, 50%, 40%);
}

table:has(tbody + tbody) :is(thead, tbody) {
	border-block-end: var(--border-light);
}

table:has(tbody + tbody) tbody:nth-child(even) {
	background: var(--color-bg2);
}

table:not(:has(tbody + tbody)) tr {
	border-block-end: var(--border-light);
}

table:not(:has(tbody + tbody)) tbody tr:nth-child(odd) {
	background: var(--color-bg2);
}

tr:has(.Table-variant) {
	border-block-start: var(--border-extra-light);
}

th {
	text-align: start;
}

thead th,
table-saw :is(tbody, tfoot) :is(th, td)::before {
	color: var(--color-secondary);
	font-size: 0.875rem;
	font-weight: 600;
	text-transform: uppercase;
	letter-spacing: 0.05em;
	vertical-align: top;
	line-height: calc(var(--line-height) * 1rem);
}

table-saw :is(tbody, tfoot) :is(th, td)::before {
	font-size: 0.75rem;
}

tbody th {
	font-weight: normal;
}

th,
td {
	padding-inline: 0.75rem;
	padding-block: 0.75rem;
}

:is(th, td):not(:last-child) {
	padding-inline-end: 1rem;
}

.Table-products {
	width: 6.5em;
}

.Table-date {
	width: 6.5em;
}

.Table-variant {
	padding-inline-start: 1.5rem;
}

.Table-image {
	width: 5rem;
}

table:not(:has(.Symbol)) .Table-symbols {
	display: none;
}

table:has(.Symbols-item:last-child:nth-child(1)) .Table-symbols,
table:has(.Symbols-item:last-child:nth-child(2)) .Table-symbols {
	width: 4.5em;
}

table:has(.Symbols-item:last-child:nth-child(3)) .Table-symbols {
	width: 6.5em;
}

table:has(.Symbols-item:last-child:nth-child(4)) .Table-symbols {
	width: 8.75em;
}

.Table-sm {
	font-size: 0.875em;
}

table .Symbols {
	justify-content: flex-end;
}

@container table (max-inline-size: 52rem) {
	.ts_c_max_width__52rem_ :is(th, td) {
		padding-block: 0;
	}

	.ts_c_max_width__52rem_
		:is(.Table-products, .Table-date, .Table-symbols, .Table-image) {
		width: auto !important;
	}

	.ts_c_max_width__52rem_ .Symbols {
		justify-content: flex-start;
	}

	.ts_c_max_width__52rem_ .Table-variant {
		padding-inline-start: 0.75rem;
	}

	.ts_c_max_width__52rem_ .Table-variant::before,
	.ts_c_max_width__52rem_ .Table-variant ~ td::before {
		padding-inline-start: 1rem;
	}

	.ts_c_max_width__52rem_ .has-item th:first-of-type {
		border-inline-start: none;
	}

	.ts_c_max_width__52rem_ td:has(.u-hiddenVisually) {
		display: none !important;
	}

	.ts_c_max_width__52rem_ td:has(.u-hiddenVisually),
	.ts_c_max_width__52rem_ .Table-symbols:not(:has(.Symbol)) {
		display: none !important;
	}
}

@container table (max-inline-size: 40rem) {
	.ts_c_max_width__40rem_ :is(th, td) {
		padding-block: 0;
	}

	.ts_c_max_width__40rem_
		:is(.Table-products, .Table-date, .Table-symbols, .Table-image) {
		width: auto !important;
	}

	.ts_c_max_width__40rem_ .Symbols {
		justify-content: flex-start;
	}

	.ts_c_max_width__40rem_ .Table-variant {
		padding-inline-start: 0.75rem;
	}

	.ts_c_max_width__40rem_ .Table-variant::before,
	.ts_c_max_width__40rem_ .Table-variant ~ td::before {
		padding-inline-start: 1rem;
	}

	.ts_c_max_width__40rem_ .has-item th:first-of-type {
		border-inline-start: none;
	}

	.ts_c_max_width__40rem_ td:has(.u-hiddenVisually),
	.ts_c_max_width__40rem_ .Table-symbols:not(:has(.Symbol)) {
		display: none !important;
	}
}

@container table (max-inline-size: 32rem) {
	.ts_c_max_width__32rem_ :is(th, td) {
		padding-block: 0;
	}

	.ts_c_max_width__32rem_
		:is(.Table-products, .Table-date, .Table-symbols, .Table-image) {
		width: auto !important;
	}

	.ts_c_max_width__32rem_ .Symbols {
		justify-content: flex-start;
	}

	.ts_c_max_width__32rem_ .Table-variant {
		padding-inline-start: 0.75rem;
	}

	.ts_c_max_width__32rem_ .Table-variant::before,
	.ts_c_max_width__32rem_ .Table-variant ~ td::before {
		padding-inline-start: 1rem;
	}

	.ts_c_max_width__32rem_ .has-item th:first-of-type {
		border-inline-start: none;
	}

	.ts_c_max_width__32rem_ td:has(.u-hiddenVisually),
	.ts_c_max_width__32rem_ .Table-symbols:not(:has(.Symbol)) {
		display: none !important;
	}
}
