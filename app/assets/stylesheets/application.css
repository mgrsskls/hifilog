@layer reset, global, components, utils;

@import url("./application/app_news.css") layer(components);
@import url("./application/avatar.css") layer(components);
@import url("./application/back_link.css") layer(components);
@import url("./application/breadcrumbs.css") layer(components);
@import url("./application/button.css") layer(components);
@import url("./application/checkbox_button.css") layer(components);
@import url("./application/empty_state.css") layer(components);
@import url("./application/entity_list.css") layer(components);
@import url("./application/filter.css") layer(components);
@import url("./application/flash_messages.css") layer(components);
@import url("./application/footer.css") layer(components);
@import url("./application/form.css") layer(components);
@import url("./application/header.css") layer(components);
@import url("./application/heading.css") layer(components);
@import url("./application/image_dialog.css") layer(components);
@import url("./application/image_gallery.css") layer(components);
@import url("./application/index_page.css") layer(components);
@import url("./application/instructions.css") layer(components);
@import url("./application/menu.css") layer(components);
@import url("./application/meta_links.css") layer(components);
@import url("./application/page_actions.css") layer(components);
@import url("./application/pagination.css") layer(components);
@import url("./application/rte.css") layer(components);
@import url("./application/search_results.css") layer(components);
@import url("./application/sidebar.css") layer(components);
@import url("./application/skip.css") layer(components);
@import url("./application/symbol.css") layer(components);
@import url("./application/table.css") layer(components);
@import url("./application/theme_toggle.css") layer(components);
@import url("./application/utils.css") layer(utils);

@layer reset {
	dd {
		margin: 0;
	}

	input:not([type="checkbox"], [type="radio"], [type="hidden"]) {
		all: unset;
	}

	textarea {
		form-sizing: normal;
		min-block-size: 10em;
	}

	legend {
		padding: 0;
		display: table;
	}

	fieldset {
		border: 0;
		padding: 0.01em 0 0 0;
		margin: 0;
		min-width: 0;
	}

	body:not(:-moz-handler-blocked) fieldset {
		display: table-cell;
	}

	select {
		background: none;
	}

	button {
		all: unset;
		border: var(--border) transparent;
		cursor: pointer;
	}

	svg {
		display: block;
	}

	summary {
		cursor: default;
	}
}

@layer global {
	:where(html) {
		--underline-offset: 0.275em;
		--underline-width: 0.0625rem;
		--border: 0.0625rem solid;
		--border-extra-light: var(--border) var(--color-border-extra-light);
		--border-light: var(--border) var(--color-border-light);
		--border-medium: var(--border) var(--color-border-medium);
		--border-radius: 0.1875rem;
		--line-height: 1.75;
		--input-padding: 0.325em 1em;
		--header-height: 3.75rem;
		--sidebar-size: clamp(17rem, 26vi, 20rem);

		--hue: 204;
		--sat: 25%;
		--hue-accent: 312;

		--color-white: #fff;
		--color-blue-975: hsl(var(--hue), 40%, 97.5%);
		--color-blue-925: hsl(var(--hue), 40%, 92.5%);
		--color-blue-750: hsl(var(--hue), 40%, 75%);
		--color-blue-500: hsl(var(--hue), 40%, 50%);
		--color-blue-175: hsl(var(--hue), 40%, 17.5%);
		--color-blue-150: hsl(var(--hue), 40%, 15%);
		--color-blue-125: hsl(var(--hue), 40%, 12.5%);
		--color-blue-100: hsl(var(--hue), 40%, 10%);

		--color-accent-on-light: hsl(var(--hue-accent), 34%, 25%);
		--color-accent-on-dark: hsl(var(--hue-accent), 50%, 85%);
		--color-secondary-accent-on-light: hsl(var(--hue-accent), 34%, 75%);
		--color-secondary-accent-on-dark: hsl(var(--hue-accent), 50%, 25%);
		--color-copy-on-light: hsl(var(--hue), 30%, 20%);
		--color-copy-on-dark: hsl(var(--hue), 30%, 80%);
		--color-secondary-on-light: hsl(var(--hue), 30%, 40%);
		--color-secondary-on-dark: hsl(var(--hue), 30%, 65%);
		--color-bg-on-light: hsl(204, 18.5%, 100%);
		--color-bg-on-dark: hsl(204, 40%, 15%);
		--color-continued-marker: var(--color-success-medium);
		--color-discontinued-marker: var(--color-invalid-medium);

		--color-menu-bg: var(--color-blue-175);
		--color-header-bg: var(--color-blue-100);
		--color-header-copy: hsl(var(--hue), var(--sat), 80%);
		--color-button-bg: hsl(var(--hue), var(--sat), 40%);
		--color-button-box-shadow: hsla(0, 0%, 0%, var(--button-box-shadow-a));
		--color-input-box-shadow: hsla(0, 0%, 0%, var(--input-box-shadow-a));
		--color-border-extra-light: hsl(
			var(--color-border-h-s),
			var(--border-l-extra-light)
		);
		--color-border-light: hsl(var(--color-border-h-s), var(--border-l-light));
		--color-border-medium: hsl(var(--color-border-h-s), var(--border-l-medium));
		--color-focus-outline: hsl(var(--hue-accent), 75%, 50%);
		--color-highlight: var(--color-accent);
		--color-input-bg: var(--color-blue-975);
		--color-input-placeholder: var(--color-copy-on-light);
		--color-input: var(--color-copy-on-light);

		--color-transparency-10-dark: rgba(255, 255, 255, 0.1);
		--color-transparency-15-dark: rgba(255, 255, 255, 0.15);
		--color-transparency-25-dark: rgba(255, 255, 255, 0.25);
		--summary-arrow-dark: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 9' fill='none'%3E%3Cpath stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 1 8 8 1 1'/%3E%3C/svg%3E");

		block-size: 100%;
		background: var(--color-bg-main);
		scroll-padding-block-start: calc(var(--header-height) + 2rem);
		scroll-behavior: smooth;
	}

	:where(html),
	html:where([data-theme="light"]),
	.is-light {
		--bg-l: 100%;
		--button-box-shadow-a: 20%;
		--input-box-shadow-a: 10%;
		--color-border-h-s: var(--hue), 10%;
		--border-l-extra-light: 90%;
		--border-l-light: 80%;
		--border-l-medium: 65%;

		--color-bg-main: var(--color-bg-on-light);
		--color-bg2: var(--color-blue-975);
		--color-accent: var(--color-accent-on-light);
		--color-accent-secondary: var(--color-secondary-accent-on-light);
		--color-button-copy: var(--color-white);
		--color-highlight-copy: var(--color-white);
		--color-invalid-light: hsl(330, 40%, 90%);
		--color-invalid-medium: hsl(330, 40%, 45%);
		--color-invalid-dark: hsl(330, 85%, 25%);
		--color-invalid-bg: var(--color-invalid-light);
		--color-invalid-copy: var(--color-invalid-dark);
		--color-bookmark-light: hsl(204, 40%, 90%);
		--color-bookmark-dark: hsl(204, 100%, 35%);
		--color-bookmark-bg: var(--color-bookmark-light);
		--color-bookmark-copy: var(--color-bookmark-dark);
		--color-success-light: hsl(165, 40%, 90%);
		--color-success-medium: hsl(165, 40%, 45%);
		--color-success-dark: hsl(165, 85%, 25%);
		--color-success-bg: var(--color-success-light);
		--color-success-copy: var(--color-success-dark);
		--color-transparency-10: rgba(0, 0, 0, 0.1);
		--color-transparency-15: rgba(0, 0, 0, 0.15);
		--color-transparency-25: rgba(0, 0, 0, 0.25);
		--summary-arrow: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 9' fill='none'%3E%3Cpath stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 1 8 8 1 1'/%3E%3C/svg%3E");
		--color-copy: var(--color-copy-on-light);
		--color-copy-on-secondary: #fff;
		--color-copy-on-accent: #fff;
		--color-secondary: var(--color-secondary-on-light);
		--color-input-placeholder: var(--color-copy-on-light);
		--color-input: var(--color-copy-on-light);
		--color-menu-main-active-copy: var(--color-copy-on-light);
		--color-menu-main-active-bg: var(--color-bg-main);

		color-scheme: light;
		accent-color: var(--color-accent-on-light);
		color: var(--color-copy-on-light);
	}

	@media (prefers-color-scheme: dark) {
		:where(html) {
			--bg-l: 15%;
			--button-box-shadow-a: 50%;
			--input-box-shadow-a: 30%;
			--color-border-h-s: var(--hue), 20%;
			--border-l-extra-light: 20%;
			--border-l-light: 30%;
			--border-l-medium: 45%;

			--color-bg-main: var(--color-bg-on-dark);
			--color-highlight-copy: hsl(var(--hue-accent), 34%, 15%);
			--color-invalid-bg: var(--color-invalid-dark);
			--color-invalid-copy: var(--color-invalid-light);
			--color-success-bg: var(--color-success-dark);
			--color-success-copy: var(--color-success-light);
			--color-bookmark-bg: var(--color-bookmark-dark);
			--color-bookmark-copy: var(--color-bookmark-light);

			--color-bg2: var(--color-blue-125);
			--color-accent: var(--color-accent-on-dark);
			--color-accent-secondary: var(--color-secondary-accent-on-dark);
			--color-copy: var(--color-copy-on-dark);
			--color-copy-on-secondary: var(--color-copy-on-light);
			--color-copy-on-accent: var(--color-copy-on-light);
			--color-secondary: var(--color-secondary-on-dark);

			--color-transparency-10: var(--color-transparency-10-dark);
			--color-transparency-15: var(--color-transparency-15-dark);
			--color-transparency-25: var(--color-transparency-25-dark);
			--summary-arrow: var(--summary-arrow-dark);
			--color-menu-main-active-copy: var(--color-white);

			color-scheme: dark;
			accent-color: var(--color-accent-on-dark);
			color: var(--color-copy-on-dark);
		}
	}

	html:where([data-theme="dark"]),
	.is-dark {
		--bg-l: 15%;
		--button-box-shadow-a: 50%;
		--input-box-shadow-a: 30%;
		--color-border-h-s: var(--hue), 20%;
		--border-l-extra-light: 20%;
		--border-l-light: 30%;
		--border-l-medium: 45%;

		--color-highlight-copy: hsl(var(--hue-accent), 34%, 15%);
		--color-invalid-bg: var(--color-invalid-dark);
		--color-invalid-copy: var(--color-invalid-light);
		--color-success-bg: var(--color-success-dark);
		--color-success-copy: var(--color-success-light);
		--color-bookmark-bg: var(--color-bookmark-dark);
		--color-bookmark-copy: var(--color-bookmark-light);

		--color-bg2: var(--color-blue-125);
		--color-accent: var(--color-accent-on-dark);
		--color-accent-secondary: var(--color-secondary-accent-on-dark);
		--color-copy: var(--color-copy-on-dark);
		--color-copy-on-secondary: var(--color-copy-on-light);
		--color-copy-on-accent: var(--color-copy-on-light);
		--color-secondary: var(--color-secondary-on-dark);
		--color-transparency-10: var(--color-transparency-10-dark);
		--color-transparency-15: var(--color-transparency-15-dark);
		--color-transparency-25: var(--color-transparency-25-dark);
		--summary-arrow: var(--summary-arrow-dark);

		color-scheme: dark;
		accent-color: var(--color-accent-on-dark);
		color: var(--color-copy-on-dark);
	}

	html:where([data-theme="dark"]) {
		--color-menu-main-active-copy: var(--color-white);
	}

	.is-secondary {
		--color-input-bg: var(--color-white);
	}

	html:where([data-theme="dark"]) {
		--color-bg-main: var(--color-bg-on-dark);
	}

	body {
		font-family:
			-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial,
			sans-serif;
		line-height: var(--line-height);
		margin: 0;
		display: flex;
		flex-direction: column;
		min-block-size: 100%;
		inline-size: 100%;
	}

	body > :is(header, nav, main, footer) {
		inline-size: 100%;
		box-sizing: border-box;
	}

	b {
		font-weight: 600;
	}

	a,
	button {
		color: var(--color-accent);
		text-underline-offset: var(--underline-offset);
		text-decoration-thickness: var(--underline-width);
	}

	a:hover,
	button:hover {
		color: var(--color-copy);
	}

	:is(a, input, textarea, button, select) {
		border-radius: var(--border-radius);
	}

	:is(a, input, textarea, button, select):focus-visible {
		outline: 0.125rem solid var(--color-focus-outline);
		outline-offset: 0.1875rem;
	}

	form[method="dialog"] button:not([class]),
	button[formmethod="dialog"]:not([class]) {
		text-decoration: underline;
	}

	header {
		background: var(--color-header-bg);
		position: sticky;
		inset-block-start: 0;
		z-index: 9999;
	}

	main:not(:has(.Home)):not(:has(.Profile)):not(:has(.IndexPage--fullPage)):not(
			:has(.Dashboard)
		) {
		padding-block: clamp(1.5rem, 5vw, 3rem);
	}

	time {
		font-variant-numeric: tabular-nums;
	}

	h1,
	.h1 {
		font-size: 2.6rem;
		font-weight: 600;
		line-height: 1.1;
		margin-block: 0;
	}

	.h1-sm {
		font-size: 2rem;
	}

	h1 small,
	.IndexPage-category {
		font-size: 1rem;
		font-weight: 500;
		line-height: 1.5;
		display: block;
		color: var(--color-secondary);
		margin-block-start: 0.25rem;
	}

	.IndexPage-category {
		font-size: 1.2rem;
	}

	h1 span {
		font-weight: lighter;
	}

	h2:not(.h3, .h4),
	.h2 {
		font-size: 1.8rem;
		line-height: 1.2;
		font-weight: 600;
		margin-block-start: 1.15em;
	}

	h3,
	.h3 {
		font-size: 1.4rem;
		line-height: 1.4;
		font-weight: 600;
		margin-block-end: 1em;
	}

	h4,
	.h4 {
		font-size: 1.2rem;
		font-weight: 600;
	}

	img {
		display: block;
		max-inline-size: 100%;
	}

	sup {
		line-height: 1;
		font-size: 0.75em;
	}

	:is(input, textarea)::placeholder {
		color: var(--color-input-placeholder);
		opacity: 0.5;
	}

	select {
		/* Necessary because iOS Safari uses it for the text, becomes unreadable */
		accent-color: var(--color-accent-on-light);
	}

	select,
	input:not([type="checkbox"], [type="radio"], [type="hidden"], [type="file"]) {
		block-size: 2.525rem;
	}

	select,
	input:not([type="checkbox"], [type="radio"], [type="hidden"], [type="file"]),
	textarea {
		display: block;
		font: inherit;
		color: var(--color-input);
		padding: var(--input-padding);
		border: var(--border-medium);
		border-radius: var(--border-radius);
		background: var(--color-input-bg);
		box-shadow: 0.05rem 0.1rem 0.5rem var(--color-input-box-shadow) inset;
		inline-size: 100%;
		box-sizing: border-box;
	}

	::file-selector-button {
		block-size: 2.525rem;
	}

	[type="file"] {
		display: block;
	}

	.field_with_errors
		:is(
			input:not([type="checkbox"], [type="radio"], [type="hidden"]),
			textarea
		) {
		border-color: var(--color-invalid-copy);
	}

	.field_with_errors label {
		color: var(--color-invalid-copy);
	}

	dialog {
		border: none;
		background: var(--color-bg-main);
		padding: 1rem;
		border-radius: var(--border-radius);
		max-block-size: calc(100dvb - 4rem);
		box-sizing: border-box;
	}

	dialog::backdrop {
		background: rgba(0, 0, 0, 0.75);
	}

	dialog img {
		border-radius: var(--border-radius);
	}

	hr {
		color: var(--color-transparency-25);
	}

	.ImageDialog {
		padding: 0;
		background: none;
		overscroll-behavior: contain;
		min-inline-size: 4rem;
		min-block-size: 4rem;
	}

	.ImageDialog::before {
		content: "";
		display: block;
		background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 600 600' width='600' height='600'%3E%3Cpath fill='%237a9bb8' d='M300 0C193.69 0 100.3 55.29 47.02 138.69l110.88 64.02a15.41 15.41 0 0 1 5.64 21.05l-2.27 3.93a15.41 15.41 0 0 1-21.05 5.64L29.77 169.56A298.84 298.84 0 0 0 0 300c0 165.69 134.31 300 300 300s300-134.31 300-300S465.69 0 300 0Z'/%3E%3C/svg%3E%0A");
		background-size: 100% 100%;
		background-repeat: no-repeat;
		inline-size: 4rem;
		aspect-ratio: 1;
		position: absolute;
		top: 50%;
		left: 50%;
		translate: -50% -50%;
		animation: spinner 1s ease infinite;
	}

	.Tag {
		display: inline-flex;
		padding-block: 0.1em;
		padding-inline: 0.6em;
		border: var(--border-light);
		text-decoration: none;
		text-align: center;
		border-radius: 1.5em;
		font-weight: 600;
		font-size: 0.75rem;
		margin-inline-start: 0.5rem;
	}

	@keyframes spinner {
		0% {
			rotate: 0;
		}
		100% {
			rotate: 1turn;
		}
	}

	.ImageDialog img {
		max-block-size: calc(100dvb - 3rem);
		max-inline-size: calc(100dvi - 3rem);
		position: relative;
	}

	@media (width < 36rem) {
		h1,
		.h1 {
			font-size: 2.2rem;
		}

		h2,
		.h2 {
			font-size: 1.6rem;
		}
	}

	html {
		--page-spacing: clamp(1rem, 5vw, 3rem);
	}

	.Data {
		margin-block: 0;
	}

	.Data:not(.Data--inline):not(.Data--grid) {
		display: grid;
		grid-template-columns: auto 1fr;
		gap: 0.5em 0;
	}

	.Data--inline {
		display: flex;
		gap: 1em;
	}

	.Data dt {
		font-weight: 500;
		color: var(--color-secondary);
	}

	.Data:not(.Data--inline):not(.Data--grid) dt {
		padding-inline-end: 1rem;
	}

	.Data dd {
		color: var(--color-accent);
	}

	.Data a:is([aria-current="true"], [aria-current="page"]) {
		font-weight: 600;
	}

	.Data-secondary {
		color: var(--color-copy);
		font-size: 0.875em;
	}

	@media (hover: none) {
		:is(a, button):hover,
		:is(a, button):hover span {
			text-decoration: none !important;
		}
	}

	#list {
		scroll-margin-block-start: calc(var(--header-height) + 1.15em);
	}

	.LoadingIcon {
		width: 1.5rem;
		aspect-ratio: 1;
		border: 0.25em solid var(--color-accent);
		border-bottom-color: transparent;
		border-radius: 50%;
		display: inline-block;
		box-sizing: border-box;
		animation: rotation 1s linear infinite;
	}

	@keyframes rotation {
		0% {
			transform: rotate(0deg);
		}
		100% {
			transform: rotate(360deg);
		}
	}

	summary {
		display: flex;
		justify-content: space-between;
		align-items: center;
		list-style: none;
		cursor: pointer;
	}

	summary::-webkit-details-marker {
		display: none;
	}

	summary::after {
		display: block;
		content: "";
		inline-size: 1em;
		block-size: 0.5625em;
		transition: transform 0.25s ease;
		background-image: var(--summary-arrow);
	}

	details:not([open]) summary::after {
		transform: rotate(-0.25turn);
	}

	[hidden] {
		display: none !important;
	}
}
