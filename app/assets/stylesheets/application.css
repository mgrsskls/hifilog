@layer reset, global, components, utils;

@import url("./application/_reset.css") layer(reset);
@import url("./application/_tokens.css") layer(tokens);
@import url("./application/app_news.css") layer(components);
@import url("./application/avatar.css") layer(components);
@import url("./application/back_link.css") layer(components);
@import url("./application/button.css") layer(components);
@import url("./application/checkbox_button.css") layer(components);
@import url("./application/empty_state.css") layer(components);
@import url("./application/entity_list.css") layer(components);
@import url("./application/filter.css") layer(components);
@import url("./application/flash_messages.css") layer(components);
@import url("./application/footer.css") layer(components);
@import url("./application/form.css") layer(components);
@import url("./application/header.css") layer(components);
@import url("./application/heading.css") layer(components);
@import url("./application/image_dialog.css") layer(components);
@import url("./application/image_gallery.css") layer(components);
@import url("./application/index_page.css") layer(components);
@import url("./application/instructions.css") layer(components);
@import url("./application/menu.css") layer(components);
@import url("./application/meta_links.css") layer(components);
@import url("./application/page_actions.css") layer(components);
@import url("./application/pagination.css") layer(components);
@import url("./application/rte.css") layer(components);
@import url("./application/search_results.css") layer(components);
@import url("./application/sidebar.css") layer(components);
@import url("./application/skip.css") layer(components);
@import url("./application/symbol.css") layer(components);
@import url("./application/table.css") layer(components);
@import url("./application/theme_toggle.css") layer(components);
@import url("./application/utils.css") layer(utils);

@layer global {
	body {
		font-family:
			-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial,
			sans-serif;
		line-height: var(--line-height);
		margin: 0;
		display: flex;
		flex-direction: column;
		min-block-size: 100%;
		inline-size: 100%;
	}

	body > :is(header, nav, main, footer) {
		inline-size: 100%;
		box-sizing: border-box;
	}

	b {
		font-weight: 600;
	}

	a,
	button {
		color: var(--color-accent);
		text-underline-offset: var(--underline-offset);
		text-decoration-thickness: var(--underline-width);
	}

	a:hover,
	button:hover {
		color: var(--color-copy);
	}

	:is(a, input, textarea, button, select) {
		border-radius: var(--border-radius);
	}

	:is(a, input, textarea, button, select):focus-visible {
		outline: 0.125rem solid var(--color-focus-outline);
		outline-offset: 0.1875rem;
	}

	form[method="dialog"] button:not([class]),
	button[formmethod="dialog"]:not([class]) {
		text-decoration: underline;
	}

	header {
		background: var(--color-header-bg);
		position: sticky;
		inset-block-start: 0;
		z-index: 9999;
	}

	.Main:not(:has(.Home)):not(:has(.Profile)):not(
			:has(.IndexPage--fullPage)
		):not(:has(.Dashboard)) {
		padding-block: clamp(1.5rem, 5vw, 3rem);
	}

	time {
		font-variant-numeric: tabular-nums;
		white-space: nowrap;
	}

	h1,
	.h1 {
		font-size: 2.6rem;
		font-weight: 600;
		line-height: 1.1;
		margin-block: 0;
	}

	.h1-sm {
		font-size: 2rem;
	}

	h1 small,
	.IndexPage-category {
		font-size: 1rem;
		font-weight: 500;
		line-height: 1.5;
		display: block;
		color: var(--color-secondary);
		margin-block-start: 0.25rem;
	}

	.IndexPage-category {
		font-size: 1.2rem;
	}

	h1 span {
		font-weight: lighter;
	}

	h2:not(.h3, .h4),
	.h2 {
		font-size: 1.8rem;
		line-height: 1.2;
		font-weight: 600;
		margin-block-start: 1.15em;
	}

	h3,
	.h3 {
		font-size: 1.4rem;
		line-height: 1.4;
		font-weight: 600;
		margin-block-end: 1em;
	}

	h4,
	.h4 {
		font-size: 1.2rem;
		font-weight: 600;
	}

	img {
		display: block;
		max-inline-size: 100%;
	}

	sup {
		line-height: 1;
		font-size: 0.75em;
	}

	:is(input, textarea)::placeholder {
		color: var(--color-input-placeholder);
		opacity: 0.5;
	}

	select {
		/* Necessary because iOS Safari uses it for the text, becomes unreadable */
		accent-color: var(--color-accent-on-light);
	}

	select,
	input:not([type="checkbox"], [type="radio"], [type="hidden"], [type="file"]) {
		block-size: 2.525rem;
	}

	select,
	input:not([type="checkbox"], [type="radio"], [type="hidden"], [type="file"]),
	textarea {
		display: block;
		font: inherit;
		color: var(--color-input);
		padding: var(--input-padding);
		border: var(--border-medium);
		border-radius: var(--border-radius);
		background: var(--color-input-bg);
		box-shadow: 0.05rem 0.1rem 0.5rem var(--color-input-box-shadow) inset;
		inline-size: 100%;
		box-sizing: border-box;
	}

	::file-selector-button {
		block-size: 2.525rem;
	}

	[type="file"] {
		display: block;
	}

	.field_with_errors
		:is(
			input:not([type="checkbox"], [type="radio"], [type="hidden"]),
			textarea
		) {
		border-color: var(--color-invalid-copy);
	}

	.field_with_errors label {
		color: var(--color-invalid-copy);
	}

	dialog {
		border: none;
		background: var(--color-bg-main);
		padding: 1rem;
		border-radius: var(--border-radius);
		max-block-size: calc(100dvb - 4rem);
		box-sizing: border-box;
	}

	dialog::backdrop {
		background: rgba(0, 0, 0, 0.75);
	}

	dialog img {
		border-radius: var(--border-radius);
	}

	hr {
		color: var(--color-transparency-25);
	}

	.ImageDialog {
		padding: 0;
		background: none;
		overscroll-behavior: contain;
		min-inline-size: 4rem;
		min-block-size: 4rem;
	}

	.ImageDialog::before {
		content: "";
		display: block;
		background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 600 600' width='600' height='600'%3E%3Cpath fill='%237a9bb8' d='M300 0C193.69 0 100.3 55.29 47.02 138.69l110.88 64.02a15.41 15.41 0 0 1 5.64 21.05l-2.27 3.93a15.41 15.41 0 0 1-21.05 5.64L29.77 169.56A298.84 298.84 0 0 0 0 300c0 165.69 134.31 300 300 300s300-134.31 300-300S465.69 0 300 0Z'/%3E%3C/svg%3E%0A");
		background-size: 100% 100%;
		background-repeat: no-repeat;
		inline-size: 4rem;
		aspect-ratio: 1;
		position: absolute;
		top: 50%;
		left: 50%;
		translate: -50% -50%;
		animation: spinner 1s ease infinite;
	}

	.Tag {
		display: inline-flex;
		padding-block: 0.1em;
		padding-inline: 0.6em;
		border: var(--border-light);
		text-decoration: none;
		text-align: center;
		border-radius: 1.5em;
		font-weight: 600;
		font-size: 0.75rem;
		margin-inline-start: 0.5rem;
	}

	@keyframes spinner {
		0% {
			rotate: 0;
		}
		100% {
			rotate: 1turn;
		}
	}

	.ImageDialog img {
		max-block-size: calc(100dvb - 3rem);
		max-inline-size: calc(100dvi - 3rem);
		position: relative;
	}

	@media (width < 36rem) {
		h1,
		.h1 {
			font-size: 2.2rem;
		}

		h2,
		.h2 {
			font-size: 1.6rem;
		}
	}

	html {
		--page-spacing: clamp(0.625rem, 3vi, 2.5rem);
	}

	.Data {
		margin-block: 0;
	}

	.Data:not(.Data--inline):not(.Data--grid) {
		display: grid;
		grid-template-columns: auto 1fr;
		gap: 0.5em 0;
	}

	.Data--inline {
		display: flex;
		gap: 1em;
	}

	.Data dt {
		font-weight: 500;
		color: var(--color-secondary);
	}

	.Data:not(.Data--inline):not(.Data--grid) dt {
		padding-inline-end: 1rem;
	}

	.Data dd {
		color: var(--color-accent);
	}

	.Data a:is([aria-current="true"], [aria-current="page"]) {
		font-weight: 600;
	}

	.Data-secondary {
		color: var(--color-copy);
		font-size: 0.875em;
	}

	@media (hover: none) {
		:is(a, button):hover,
		:is(a, button):hover span {
			text-decoration: none !important;
		}
	}

	#list {
		scroll-margin-block-start: calc(var(--header-height) + 1.15em);
	}

	.LoadingIcon {
		width: 1.5rem;
		aspect-ratio: 1;
		border: 0.25em solid var(--color-accent);
		border-bottom-color: transparent;
		border-radius: 50%;
		display: inline-block;
		box-sizing: border-box;
		animation: rotation 1s linear infinite;
	}

	@keyframes rotation {
		0% {
			transform: rotate(0deg);
		}
		100% {
			transform: rotate(360deg);
		}
	}

	summary {
		display: flex;
		justify-content: space-between;
		align-items: center;
		list-style: none;
		cursor: pointer;
	}

	summary::-webkit-details-marker {
		display: none;
	}

	summary::after {
		display: block;
		content: "";
		inline-size: 1em;
		block-size: 0.5625em;
		transition: transform 0.25s ease;
		background-image: var(--summary-arrow);
	}

	details:not([open]) summary::after {
		transform: rotate(-0.25turn);
	}

	[hidden] {
		display: none !important;
	}

	.SignUpCall {
		font-size: 0.875em;
		text-align: center;
		padding: 1em;
		background: var(--color-secondary-on-light);
		color: #fff;

		p {
			margin: 0;
		}

		a,
		button {
			color: inherit;
			text-decoration: underline;
		}
	}
}
